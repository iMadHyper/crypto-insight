services:
  fastapi-app:
    image: backend-image
    build:
      context: ./backend
    container_name: fastapi-app
    depends_on:
      - db
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=db
      - DB_PORT=5432
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
    ports:
      - "8000:8000"

  db:
    image: postgres:17.6-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080

  redis:
    image: redis:8.2.1-alpine
    container_name: redis
    ports:
      - "6379:6379"

  redis-commander:
    image: rediscommander/redis-commander
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379

  celery-worker:
    image: backend-image
    container_name: celery-worker
    build:
      context: ./backend
    command: celery -A tasks worker --loglevel=info
    depends_on:
      - redis

  celery-beat:
    image: backend-image
    container_name: celery-beat
    build:
      context: ./backend
    command: celery -A tasks beat --loglevel=info
    depends_on:
      - redis

volumes:
  postgres_data: 